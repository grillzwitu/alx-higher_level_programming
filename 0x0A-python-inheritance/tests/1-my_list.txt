========================
The ``1-my_list`` module
========================

Importing the function from the module:
	  >>> MyList = __import__("1-my_list").MyList

Checking for module docstring:
         >>> m_doc = __import__("1-my_list").__doc__
         >>> len(m_doc) > 1
         True

Checking for class docstring:
         >>> c_doc = __import__("1-my_list").MyList.__doc__
	 >>> len(c_doc) > 1
	 True

Checking for method docstring:
	 >>> meth_doc = __import__("1-my_list").MyList.print_sorted.__doc__
	 >>> len(meth_doc) > 1
	 True

Checking that MyList inherits from list:
	 >>> issubclass(MyList, list)
	 True

Checking for empty list:
	  >>> my_list = MyList()
	  >>> print(my_list)
	  []
	  >>> my_list.print_sorted()
	  []

Check that appending works:
	 >>> my = MyList()
	 >>> my.append(183)
	 >>> my.append(112)
	 >>> my.append(1)
	 >>> print (my)
	 [183, 112, 1]
	 >>> my.print_sorted()
	 [1, 112, 183]

Check for correct order in sorted list:
	 >>> my_l = MyList()
	 >>> my_l.append(1)
	 >>> my_l.append(4)
	 >>> my_l.append(2)
	 >>> my_l.append(3)
	 >>> my_l.append(5)
	 >>> print(my_l)
	 [1, 4, 2, 3, 5]
	 >>> my_l.print_sorted()
	 [1, 2, 3, 4, 5]
	 >>> print(my_l)
	 [1, 4, 2, 3, 5]

Checking for correct order in sorted list using negative numbers:
	 >>> l = MyList()
	 >>> l.append(-10)
	 >>> l.append(-1)
	 >>> l.append(-5)
	 >>> l.append(-2)
	 >>> l.append(-7)
	 >>> print(l)
	 [-10, -1, -5, -2, -7]
	 >>> l.print_sorted()
	 [-10, -7, -5, -2, -1]
	 >>> print(l)
	 [-10, -1, -7, -2, -8]

Checking for too many arguments:
	 >>> l.print_sorted(1)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given
